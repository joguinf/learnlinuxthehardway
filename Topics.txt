LEARNING LINUX THE HARD WAY

General notes:

This seminar is part of the operating system module or any appropriate related module.

Most parts consist of many different (but related) topics.
Each of the topics should be explained so that someone with the experience from previous talks is able to understand it.

You shall pick one of the listed topics to explain in more technical detail than the others.
If you have problems finding such a topic, please contact the lecturers.

For this course, you need either an old notebook on which you will perform the Gentoo installation (you can of course also use your primary notebook - if you feel confident enough) or the possibility to perform every step in a virtual machine (Virtualbox recommended). At the talk the student will interactively perform the steps made like in the following btrfs talk: 

https://www.youtube.com/watch?feature=player_embedded&v=hxWuaozpe2I

The talk will last 60 minutes and will be supported with an appropriate number of slides.

Free Book: Gunnar Wrobel "Gentoo Linux" (www.fosdoc.de/downloads/OSP_wrobel_gentoo.pdf)

Language: English / German (on demand)

TOPICS

0. Introduction (done by lecturer: Christian/Moritz)
 - adminstrative tasks (Scheinkriterien)
 - A Brief History of Gentoo
 - Gentoo Forks (Chrome OS, Sabayon, GentooX, Funtoo etc.)
 - A Proof Of Concept (Warsow on a Gnome3 desktop, KPH Uni-Mainz)
 - Benefits of Learning Gentoo

1. Installing the base system (A) 
   - choosing install method (any live medium e.g. Ubuntu Live CD vs. the Gentoo Live-CD)
   - remote installation using ssh
   - file systems overview (ext, swap, jfs, xfs, btrfs comparison) and partitioning with fdisk
   - wget and tar for the stage3 build
   - chrooting - password overwrite made easy
   
2. Installing the base system (B)
  - portage overview 
  - the /etc/make.conf
  - building the kernel (manual vs. genkernel all in one wonder solution)
  - user management on the shell
  - syslog-ng and vixie-cron vs. alternatives
  - Excurse: How to build a custom kernel in other distributions like Debian
  
3. Encryption using Linux - GnuPG (guest talk)
- Thomas Scheffczyk (scheff@uni-mainz.de) as lecturer (Reparation für das ungefragte rebooten von Sauce)
- server side encryption and decryption
- Certificates and snake oil

4. Server
  - sshd (/etc/sshd/*)
  - httpd (apache, tomcat, nginx)
  - database servers (mysql, postgres)
  - webapp wordpress installation

5. Remote Administration
 - GLSA-check
 - cron jobs, at
 - screen
 - Bash and Python Scripting (daily tasks)
 
6. Backup and Revision Controll
 - scp
 - rsync
 - unison
 - incremental backup (rdiff-backup)
 - git server (gitolite)
 - svn server (native)

7. Writing Ebuilds and Software Development
 - Makefiles
 - writing Python-Bindings for famous C/C++ Library (e.g. FFTW) with SWIG
 - distributing a Python Library as Ebuild (e.g. pyfftw) via portage
 - layman and popular overlays (science etc.)
 - sed and friends
 
8. Scientific Computing
 - OpenMPI Installation
 - BOINC Installation
 - Cuda SDK Installation
 - Enthought Modules (numpy, scipy, matplotlib)
 - Beowulf Cluster

9. Distributed Administration and Advanced Compiler Techniques
 - Distributed Compiling with distcc
 - Compiler Cache with ccache
 - Binary Hosts
 - Distributed File Systems (openafs, nfs/kerberos, sshfs, samba - MS integration)

10. Compiler Overview and Compiler Integration
 - GNU gcc
 - Intel icc
 - LLVM clang
 - speedup comparison for appropriate number crunching software
 - cross compilation

11. Xorg and Enlightenment 
 - choosing appropriate drivers
 - the Xorg.conf and X -configure
 - choosing a login manager gdm vs. entrance vs. slim vs. startx and .xinitrc
 - enlightenment from enlightenment overlay
 - xserver eye candy (the screenshot contest)

12. LaTeX Environment
- the texlive distribution and its USE-flags
- TIKZ - scalable vector graphics in LaTeX
- texmaker, kile, gedit
- how to publish a seminar 
- coorperative latex work with git

13. My Own LIVE CD / USB Stick
 - Deploying individual Live Medium
 - OverlayFS

